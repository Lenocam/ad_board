q
form-data
@headers
Http
"file"
image
@image
q
create
file_cache
file
image
img
Parameters
UploadFile
@image
q
@image
img
q
resource
continue
resource.inspect
resource.properties
resource.methods
resource
q
:user_login.instance_of?
:user_login.instance_of
:user_login.instance_methods
:user_login.:descendants
:user_login.
:user_login.descendants
:user_login.json_creatable?
Symbol.methods
:user_login.class
:user_login.true?
:user_login?
:user_login
[:user_login]
create
resource
user
email
continue
User.find_for_database_authentication(:email => params[:user_login][:email]).taint
User.find_for_database_authentication(:email => params[:user_login][:email]).tail
User.find_for_database_authentication(:email => params[:user_login][:email])
User.find_for_database_authentication(params[:email])
user_url
user_login
User.find_for_database_authentication(:email => params[:email])
user_login.class
login
User.find_for_database_authentication(:email => params[:user_login][:email])
user
email
:email => params[:user_login][:email]
:email
resource
:user_login.to_s
:user_login
user_login
q
create
html
html?
current_user
@gallery
q
@categories
all_categories
q
cat
categories
valid_ids
clean_up_categories(categories)
gallery_params
@gallery
@categories
@galleries
galleries
categories
q
@image
current_user
user
@user
q
@image
current_user
@user
!@user
q
index
GalleriesController.index
GalleriesController
Application
policy_scope(Gallery)
policy_scope(User)
policy_scope
current_scope
policy_scope(User)
policy_scope
@galleries = policy_scope(Gallery)
@galleries
@current_user
current_user
curren_user
pundit_user
pundit
scope
caller
Gallery
gallery
q
policy_scope(Gallery)
@galleries
galleries
user
q
request.headers["Authenticate Token"]
request.headers["Authenticate"]
self.headers
request.headers["WWW-Authenticate"]
token
authenticate_token
auth_token
auth_toke
q
token
Authorization
Authorization0
Token
head
request.headers
request.headers["Authorization"]
request.headers["Authorization: Token token="]
request.headers["Authorization: Token toke="]
request.headers["Authorization: Token toke="
token
auth_token
head
q
request.headers["Authorization"]
request.headers["Authorization: Token"]
request.headers
Token
Authorization
token
headers
type
q
user_params
@user
q
"api/v1/" + params['data']['type']
params['data']['type']
q
params['data']['type']
params[:controller]
q
"api/v1/" + params[:controller].to_s
params[:controller]
params['data']['type'] == params[:controller]
q
params['data']['type'] == params[:controller]
params['data'] == params[:controller]
params['data']
params['data']['type']
params[:controller]
q
params[:controller]
params['data']['type']
params['data']
params['data']['type']
params['type']
params['data']
params
@user
@users
@data
@type
POST
data
type
@user
user
controller_path
controller
q
current_user.admin?
current_user
@gallery.user == current_user || current_user.admin?
@gallery.user == current_user
current_user
@gallery.user
@gallery
q
@gallery.user
@gallery
@user
current_user
q
require_login!
@user
current_user
q
@current_user
@user
current_user
q
continue
index
index?
GalleryPolicy
index
q
@gallery
use
user
current_user
q
@user
q
UserPolicy
@user
user
q
user
gallery
q
gallery.user
gallery
user
q
FactoryGirl.create(:gallery)
FactoryGirl.build(:gallery)
:subject
subject
subject { GalleryPolicy.new(user, gallery) }
subject
gallery
user
q
FactoryGirl.build(:user)
user
User.connection
@user
User
user
q
gallery
user
q
user
